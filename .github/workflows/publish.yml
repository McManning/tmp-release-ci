name: Publish Packages

on:
  push:
    branches: [ master ]
    paths-ignore: [ '**.md' ]

jobs:
  publish:
    name: Publish Packages
    runs-on: windows-latest
    env:
      PUBLISH_DIR: publish
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Check for Release
      uses: cycjimmy/semantic-release-action@v2
      id: semantic
      with:
        dry_run: True
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # MSBuild workflow to support net45
    - name: Setup MSBuild
      if: steps.semantic.outputs.new_release_published == 'true'
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Setup NuGet
      if: steps.semantic.outputs.new_release_published == 'true'
      uses: NuGet/setup-nuget@v1.0.5

    - name: Restore NuGet Packages
      if: steps.semantic.outputs.new_release_published == 'true'
      run: nuget restore TestApp.sln

    - name: Build Packages
      if: steps.semantic.outputs.new_release_published == 'true'
      run: msbuild TestApp.sln /p:Configuration=Release /p:Version=${{ steps.semantic.outputs.new_release_version }}

    - name: Run Tests
      if: steps.semantic.outputs.new_release_published == 'true'
      run: dotnet test --no-restore --nologo --verbosity minimal

    # - name: Publish to NuGet
    #   if: steps.semantic.outputs.new_release_published == 'true'
    #   run: dotnet nuget push packages/*.nupkg --api-key ${{ secrets.NUGET_KEY }} --source https://api.nuget.org/v3/index.json

    - name: Archive Packages
      if: steps.semantic.outputs.new_release_published == 'true'
      run: |
        mkdir -p ${{ env.PUBLISH_DIR }}
        powershell Compress-Archive -Path TestApp/bin/Release/netcoreapp3.1/* -DestinationPath $Env:GITHUB_WORKSPACE/${{ env.PUBLISH_DIR }}/TestApp-${{ runner.os }}-${{ steps.semantic.outputs.new_release_version }}.exe

    - name: Publish to GitHub
      if: steps.semantic.outputs.new_release_published == 'true'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.semantic.outputs.new_release_version }}
        body: ${{ steps.semantic.outputs.new_release_notes }}
        draft: true
        prerelease: false
        files: ${{ env.PUBLISH_DIR }}/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # - name: Publish to GitHub
    #   if: steps.semantic.outputs.new_release_published == 'true'
    #   run: dotnet nuget push packages/*.nupkg --api-key ${{ secrets.GITHUB_TOKEN }} --source https://nuget.pkg.github.com/McManning/index.json

  # https://github.com/sensuikan1973/pedax/blob/main/.github/workflows/publish.yaml
  # Cool reference for cross-OS builds.
